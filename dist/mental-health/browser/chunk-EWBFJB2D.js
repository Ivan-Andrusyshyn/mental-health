import{a as h,b as n,c,g as D}from"./chunk-MBBNA4RC.js";import{j as A,l as v}from"./chunk-4LOI74X5.js";import{a as p}from"./chunk-XC6Q6ZZK.js";import{E as m,K as U,Y as b,da as S,g as u,ja as o}from"./chunk-M7S2SRCW.js";import{f as a}from"./chunk-BY3KSYET.js";var d={production:!0,backendUrl:"http://127.0.0.1:8000",firebaseConfig:{apiKey:"AIzaSyDZySQKBbGVduYe7ZPGQYWT9xJwLpiVI_A",authDomain:"mental-health-6b7e3.firebaseapp.com",projectId:"mental-health-6b7e3",storageBucket:"mental-health-6b7e3.appspot.com",messagingSenderId:"924061185573",appId:"1:924061185573:web:5292808328d7f374e6b1cc",measurementId:"G-N8H75H2LWJ"}};var C=(()=>{let i=class i{constructor(){this.afAuth=o(A),this.http=o(p),this.afs=o(v),this.storageService=o(D),this.user$=new u(null),this.userIdUrl=`${d.backendUrl}/userid`,this.initializeUserData(),this.initializeRoleData()}getUserData(){return this.user$.value}getUserDataObservable(){return this.user$.asObservable()}initializeUserData(){let e=this.storageService.getData(c);e?this.user$.next(e):this.afAuth.authState.subscribe(t=>{if(!t)return;let s=this.changeUserData(t);this.user$.next(s),this.storageService.setData(c,t),t&&this.setUserData(t)})}initializeRoleData(){let e=this.storageService.getData(h)||!1,t=this.storageService.getData(n)||!1;this.isUserSubject=new u(t),this.isAdminSubject=new u(e)}getUserId(){return this.user$.pipe(m(e=>!!e),U(1),b(e=>{let t=`${d.backendUrl}/${e?.uid}`;return this.http.get(t)}))}onChangeRole(e){e===n?(this.isUserSubject.next(!0),this.isAdminSubject.next(!1)):(this.isAdminSubject.next(!0),this.isUserSubject.next(!1)),this.storageService.setData(n,this.isUserSubject.value),this.storageService.setData(h,this.isAdminSubject.value)}getIsUserObservable(){return this.isUserSubject.asObservable()}getIsAdminObservable(){return this.isAdminSubject.asObservable()}loginUser(){return a(this,null,function*(){(yield this.afAuth.currentUser)&&this.onChangeRole(n)})}loginAdmin(){return a(this,null,function*(){(yield this.afAuth.currentUser)&&this.onChangeRole(h)})}signIn(e,t,s){return a(this,null,function*(){if(yield this.afAuth.currentUser){alert("User is already logged in.");return}try{let r=yield this.afAuth.signInWithEmailAndPassword(e,t);yield this.handleAuthSuccess(r.user,s)}catch(r){console.error("Login error: ",r),alert(r.message)}})}signUp(e,t,s,g){return a(this,null,function*(){try{if(yield this.afAuth.currentUser){alert("User is already logged in.");return}if((yield this.afAuth.fetchSignInMethodsForEmail(e)).length>0){alert("User already exists.");return}let f=yield this.afAuth.createUserWithEmailAndPassword(e,t);yield f.user?.updateProfile({displayName:s}),yield this.handleAuthSuccess(f.user,g)}catch(r){console.error("Registration error: ",r),alert(r.message)}})}handleAuthSuccess(e,t){return a(this,null,function*(){e&&(yield this.setUserData(e),this.onChangeRole(t))})}forgotPassword(e){return a(this,null,function*(){try{yield this.afAuth.sendPasswordResetEmail(e),alert("Password reset email sent, check your inbox.")}catch(t){console.error("Error sending password reset email: ",t),alert(t)}})}get isLoggedIn(){let e=this.storageService.getData(c);return e!==null&&e.emailVerified!==!1}setUserData(e){return a(this,null,function*(){let t=this.afs.doc(`users/${e.uid}`),s=this.changeUserData(e);this.user$.next(s),yield t.set(s,{merge:!0})})}changeUserData(e){return{uid:e.uid,email:e.email||"",displayName:e.displayName||"",photoURL:e.photoURL||"",emailVerified:e.emailVerified}}logout(){this.afAuth.signOut().then(()=>{this.isUserSubject.next(!1),this.isAdminSubject.next(!1),this.user$.next(null),this.storageService.removeData(c),this.storageService.setData(n,this.isUserSubject.value),this.storageService.setData(h,this.isAdminSubject.value)}).catch(e=>{console.error("Logout error: ",e)})}};i.\u0275fac=function(t){return new(t||i)},i.\u0275prov=S({token:i,factory:i.\u0275fac,providedIn:"root"});let l=i;return l})();export{d as a,C as b};
